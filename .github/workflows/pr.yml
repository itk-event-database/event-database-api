on: pull_request
name: Review
jobs:
    test-composer-install:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ["7.2"]
        name: Validate composer (PHP ${{ matrix.php}})
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none
                  tools: composer:v1

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Validate composer files
              run: composer validate composer.json --strict

            - name: '[prod] Composer install with exported .env variables'
              run: |
                  set -a && source .env && set +a
                  SYMFONY_ENV=prod composer install --no-dev -o

            - name: Reset composer install
              run: rm -rf ./vendor

            - name: '[dev] Composer install'
              run: SYMFONY_ENV=dev composer install --no-interaction --prefer-dist

    validate-doctrine-schema:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ["7.2"]
        name: Validate Doctrine Schema (PHP ${{ matrix.php}})
        services:
            mariadb:
                image: mariadb:10.5
                env:
                    MYSQL_USER: db
                    MYSQL_PASSWORD: db
                    MYSQL_DATABASE: db_test
                    MYSQL_ROOT_PASSWORD: db
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none
                  tools: composer:v1

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: '[dev] Composer install'
              run: composer install --no-interaction --prefer-dist

            - name: Debug Doctrine Config
              run: SYMFONY_ENV=githubactions php bin/console debug:config doctrine

            - name: Run Doctrine Migrations
              run: SYMFONY_ENV=githubactions php bin/console doctrine:migrations:migrate --no-interaction

            - name: Validate Doctrine schema
              run: SYMFONY_ENV=githubactions php bin/console doctrine:schema:validate

    php-cs-fixer:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: ["7.2"]
        name: Validate Doctrine Schema (PHP ${{ matrix.php}})
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none
                  tools: composer:v1

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: '[dev] Composer install'
              run: composer install --no-interaction --prefer-dist

            - name: Check Coding Standards
              run: php composer check-coding-standards

    phpunit:
        runs-on: ubuntu-latest
        services:
            mariadb:
                image: mariadb:10.5
                ports:
                    - 3306
                env:
                    MYSQL_USER: db
                    MYSQL_PASSWORD: db
                    MYSQL_DATABASE: db_test
                    MYSQL_ROOT_PASSWORD: password
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php: ["7.2"]
        name: PHP Unit tests (PHP ${{ matrix.php }})
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none
                  tools: composer:v1

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install --no-interaction --prefer-dist

            - name: PHP Unit
              run: SYMFONY_ENV=githubactions vendor/bin/phpunit

    behat:
        runs-on: ubuntu-latest
        services:
            mariadb:
                image: mariadb:10.5
                env:
                    MYSQL_USER: db
                    MYSQL_PASSWORD: db
                    MYSQL_DATABASE: db_test
                    MYSQL_ROOT_PASSWORD: db
                ports:
                    - 3306:3306
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php: ["7.2"]
        name: Behat tests (PHP ${{ matrix.php }})
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none
                  tools: composer:v1

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install --no-interaction --prefer-dist

            - name: JWT Setup
              run: |
                mkdir -p var/jwt
                openssl genrsa -out var/jwt/private.pem -aes256 -passout pass:test 4096
                openssl rsa -pubout -in var/jwt/private.pem -out var/jwt/public.pem -passin pass:test

            - name: Behat
              run: SYMFONY_ENV=githubactions vendor/bin/behat --profile=githubactions

    apispec:
        runs-on: ubuntu-latest
        services:
            mariadb:
                image: mariadb:10.5
                ports:
                    - 3306
                env:
                    MYSQL_USER: db
                    MYSQL_PASSWORD: db
                    MYSQL_DATABASE: db_test
                    MYSQL_ROOT_PASSWORD: password
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php: ["7.2"]
        name: API Specification validation
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Setup PHP, with composer and extensions
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php}}
                  extensions: apcu, ctype, iconv, imagick, json, redis, soap, xmlreader, zip
                  coverage: none
                  tools: composer:v1

            - name: Get composer cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ matrix.php }}-composer-

            - name: Install Dependencies
              run: composer install --no-interaction --prefer-dist

            - name: Export specifications (json)
              run: composer update-api-spec

            - name: Check for changes in specifications (json)
              run: git diff --diff-filter=ACMRT --exit-code web/api/api-spec-v1.json

