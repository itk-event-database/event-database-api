#!/bin/sh

# @see https://stackoverflow.com/a/20480591
# script to run tests on what is to be committed

# First, stash index and work dir, keeping only the
# to-be-committed changes in the working directory.
old_stash=$(git rev-parse -q --verify refs/stash)
git stash save -q --keep-index
new_stash=$(git rev-parse -q --verify refs/stash)

# If there were no changes (e.g., `--amend` or `--allow-empty`)
# then nothing was stashed, and we should skip everything,
# including the tests themselves.  (Presumably the tests passed
# on the previous commit, so there is no need to re-run them.)
if [ "$old_stash" = "$new_stash" ]; then
    echo "pre-commit script: no changes to test"
    sleep 1 # XXX hack, editor may erase message
    exit 0
fi

status=0

DIR=$(php -r "echo dirname(dirname(realpath('$0')));")
STAGED_FILES=$(git diff-index --name-only --cached --diff-filter=ACMR HEAD | grep '\.php$' | tr '\n' ' ')

if [ "$STAGED_FILES" != "" ]; then
  echo "Checking coding standard â€¦"
  echo ""
  docker compose exec phpfpm composer check-coding-standards $STAGED_FILES
  status=$?
  if [ $status != 0 ]
  then
    (>&2 echo)
    (>&2 echo "Fix the errors before commit:")
    (>&2 echo)
    (>&2 echo "  docker compose exec phpfpm composer apply-coding-standards $STAGED_FILES")
    (>&2 echo)
  fi
fi

# Restore changes
git reset --hard -q && git stash apply --index -q && git stash drop -q

# Exit with status from test-run: nonzero prevents commit
exit $status


# Local Variables:
# mode: sh
# End:
